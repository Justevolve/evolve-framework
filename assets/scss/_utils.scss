// -----------------------------------------------------------------------------
// $UTILS
// -----------------------------------------------------------------------------
// Include content inside a media query
// -----------------------------------------------------------------------------
// $media : the media query i.e. "screen and (max-width:768px)"

@mixin ev-media( $media ) {
	@media #{$media} {
		@content;
	}
}

@mixin box-shadow($shadows...) {
	@include prefixer(box-shadow, $shadows, spec);
}

@function prefix($property, $prefixes: (webkit moz o ms)) {
	$vendor-prefixed-properties: transform background-clip background-size;
	$result: ();
	@each $prefix in $prefixes {
	   @if index($vendor-prefixed-properties, $property) {
		 $property: -#{$prefix}-#{$property}
	   }
	   $result: append($result, $property);
	}
	@return $result;
}

@function trans-prefix($transition, $prefix: moz) {
	$prefixed: ();
	@each $trans in $transition {
		$prop-name: nth($trans, 1);
		$vendor-prop-name: prefix($prop-name, $prefix);
		$prop-vals: nth($trans, 2);
		$prefixed: append($prefixed, ($vendor-prop-name $prop-vals), comma);
	}

	@return $prefixed;
}

@mixin ev-transition($values...) {
	$transitions: ();
	@each $declaration in $values {
		$prop: nth($declaration, 1);
		$prop-opts: ();
		$length: length($declaration);
		@for $i from 2 through $length {
			$prop-opts: append($prop-opts, nth($declaration, $i));
		}
		$trans: ($prop, $prop-opts);
		$transitions: append($transitions, $trans, comma);
	}

	-webkit-transition: trans-prefix($transitions, webkit);
	-moz-transition: trans-prefix($transitions, moz);
	-o-transition: trans-prefix($transitions, o);
	transition: $values;
}

// -----------------------------------------------------------------------------
// $Icon extend
// -----------------------------------------------------------------------------

@mixin icon( $char ) {
	font-family: $icons;
	font-weight: 400;
	font-size: inherit;
	line-height: 1;
	text-rendering: auto;
	text-transform: none;
	text-indent: 0;
	display: block;
	speak: none;
	text-align: center;
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	content: "#{$char}";
}

// -----------------------------------------------------------------------------
// $Action button
// -----------------------------------------------------------------------------

%btn {
	.ev-btn-action {
		position: relative;
		display: inline-block;
		padding: $baseline/2 $gutter;
		line-height: 1;
		border-radius: $radius;
	}

	.ev-btn-message {
		visibility: hidden;
		@include opacity( 0 );
		@include transition( all $transition_time*2.5 ease );
	}
}

// -----------------------------------------------------------------------------
// $Label style
// -----------------------------------------------------------------------------

%label {
	font-style: italic;
	font-size: 12px;
	color: $text_light;
}

// -----------------------------------------------------------------------------
// $Remove icon
// -----------------------------------------------------------------------------

%remove_icon {
	@include icon( "\f153" );
	font-size: 18px;
	cursor: pointer;
	color: $red;
	@include opacity( 0 );
	z-index: 10;
	@include transition( color $transition_time ease );
}

// -----------------------------------------------------------------------------
// $Vertical tab style
// -----------------------------------------------------------------------------

@mixin vertical_tab_style {
	.ev-tabs-nav.ev-vertical {
		width: 20%;
		max-width: 220px;
		margin-right: -1px;
		z-index: 10;
		position: relative;

		li {
			margin-bottom: 0;

			a {
				display: block;
				position: relative;
				background-color: $grey_light_2;
				font-size: 13px;
				padding: $baseline/2 $gutter/1.5;
				text-decoration: none;
				color: $text_light;
				border-right: 1px solid $border_color;
				border-bottom: 1px solid $border_color;

				&:focus {
					@include box-shadow( none );
				}

				&.ev-active {
					font-weight: bold;
					background-color: $white;
					border-right-color: $white;
					color: $text;
				}
			}
		}
	}

	.ev-tab-container {
		border-right: 0;
		border-bottom: 0;
		border-top: 0;
		position: relative;
		z-index: 1;
		overflow-y: auto;
	}
}

// -----------------------------------------------------------------------------
// $Spinner
// -----------------------------------------------------------------------------

@mixin spinner( $size: 16px, $weight: 2px, $color: "" ) {
	z-index: 100000;
	content: "";
	display: block;
	margin: {
		left: -( ( $size + ( $weight*2 ) ) / 2 );
		top: -( ( $size + ( $weight*2 ) ) / 2 );
	}
	@include size($size);
	border-top: {
		width: $weight;
		style: solid;
	}
	border-right: {
		width: $weight;
		style: solid;
		color: transparent;
	}
	border-bottom: {
		width: $weight;
		style: solid;
		color: transparent;
	}
	border-left: {
		width: $weight;
		style: solid;
	}
	border-top-color: $color;
	border-left-color: $color;
	border-radius: 50%;
	-webkit-animation: spinner 400ms linear infinite;
	-moz-animation:    spinner 400ms linear infinite;
	-ms-animation:     spinner 400ms linear infinite;
	-o-animation:      spinner 400ms linear infinite;
	animation:         spinner 400ms linear infinite;
}

@-webkit-keyframes spinner {
	0%   { -webkit-transform: rotate(0deg); }
	100% { -webkit-transform: rotate(360deg); }
}
@-moz-keyframes spinner {
	0%   { -moz-transform: rotate(0deg); }
	100% { -moz-transform: rotate(360deg); }
}
@-o-keyframes spinner {
	0%   { -o-transform: rotate(0deg); }
	100% { -o-transform: rotate(360deg); }
}
@-ms-keyframes spinner {
	0%   { -ms-transform: rotate(0deg); }
	100% { -ms-transform: rotate(360deg); }
}
@keyframes spinner {
	0%   { transform: rotate(0deg); }
	100% { transform: rotate(360deg); }
}

// -----------------------------------------------------------------------------
// $Handle
// -----------------------------------------------------------------------------

@mixin ev_handle() {
	position: relative;
	display: block;
	visibility: hidden;
	cursor: move;

	&:before {
		@include size( 6px 14px );
		content: "";
		background-image: url( $handle_img );
		@include opacity( 25 );
		display: block;
		@include transition( opacity $transition_time ease );
	}

	&:hover:before {
		@include opacity( 100 );
	}
}