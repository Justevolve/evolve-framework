@import "../libs";

// States ----------------------------------------------------------------------

@mixin btn_idle( $size, $color: $white ) {
	&:before {
		@include position( absolute, 50% null null null );
		@include spinner( $size, 2px, $color );
		@include opacity( 0 );
		visibility: hidden;
		@include transition( visibility $transition_time*1.5, opacity $transition_time*1.5 ease );
	}

	&.ev-btn-idle {
		&:before {
			@include opacity( 100 );
			visibility: visible;
		}
	}
}

// ( 'notice', 'warning', 'success', 'error' ) // TODO: gestire ritorno

// Success
@mixin success_icon( $size ) {
	&:after {
		content: "\f147"; // Valutare se necessario usare dashicon
		font-family: $icons;
		border-radius: 50%;
		@include opacity( 0 );
		visibility: hidden;
		@include transition( visibility $transition_time*1.5, opacity $transition_time*1.5 ease );
		@include position( absolute, 50% null null null );
		line-height: $size;
		@include size( $size );
		margin-top: -$size/2;
		margin-left: -$size/2;
	}

	&.ev-btn-complete {
		&:after {
			@include opacity( 100 );
			visibility: visible;
		}

		&.ev-btn-style-round,
		&.ev-btn-style-button {
			&:after {
				color: $green;
				background-color: $white;
			}
		}

		&.ev-btn-style-text {
			&:after {
				color: $white;
				background-color: $green;
			}
		}
	}
}

// -----------------------------------------------------------------------------
// $Buttons
// -----------------------------------------------------------------------------

.ev-btn {
	position: relative;
	display: inline-block;
	cursor: pointer;
	border: none;
	padding: 0;
	background-color: transparent;

	&:focus {
		outline: none;
	}

	// Icon --------------------------------------------------------------------

	i {
		display: inline-block;
		float: left;

		// TODO: controllare allineamento icona in tutti i casi (sopratutto solo testo e icona)

		&:before {
			position: relative;
			display: inline-block;
			font-size: inherit;
			font-weight: 400;
			font-style: normal;
			text-transform: none;
			text-rendering: auto;
			-webkit-font-smoothing: antialiased;
			-moz-osx-font-smoothing: grayscale;
			text-align: center;
			float: left;
			// bottom: -1px;
		}

		+ span {
			margin-left: $gutter/2;
		}
	}

	// Sizes -------------------------------------------------------------------

	&.ev-btn-size-small {
		line-height: $baseline;
		font-size: 12px;

		i {
			font-size: 14px;
		}

		&.ev-btn-style-round i {
			@include size( $baseline );

			&:before {
				@include size( $baseline );
				line-height: $baseline;
			}
		}

		&.ev-btn-type-confirm,
		&.ev-btn-type-save {
			@include btn_idle( 8px );
			@include success_icon( 14px );
		}
	}

	&.ev-btn-size-medium {
		line-height: $baseline*1.5;
		font-size: 13px;

		i {
			font-size: 16px;
		}

		&.ev-btn-style-round i {
			@include size( $baseline*1.5 );

			&:before {
				@include size( $baseline*1.5 );
				line-height: $baseline*1.5;
			}
		}

		&.ev-btn-type-confirm,
		&.ev-btn-type-save {
			@include btn_idle( 10px );
			@include success_icon( 16px );
		}
	}

	&.ev-btn-size-large {
		line-height: $baseline*2;
		font-size: 14px;

		i {
			font-size: 18px;
		}

		&.ev-btn-style-round i {
			@include size( $baseline*2 );

			&:before {
				@include size( $baseline*2 );
				line-height: $baseline*2;
			}
		}

		&.ev-btn-type-confirm,
		&.ev-btn-type-save {
			@include btn_idle( 12px );
			@include success_icon( 18px );
		}
	}

	// Styles ------------------------------------------------------------------

	&.ev-btn-style-text {
		line-height: 1.25;

		&:hover {
			text-decoration: underline;
		}

		&.ev-btn-type-confirm {
			&:before {
				border-top-color: $blue;
				border-left-color: $blue;
			}
		}
		&.ev-btn-type-save {
			&:before {
				border-top-color: $green;
				border-left-color: $green;
			}
		}

		&.ev-btn-type-confirm,
		&.ev-btn-type-save {
			&:after,
			&:before {
				right: 0;
			}

			&.ev-btn-idle {
				&.ev-btn-size-small {
					padding-right: $gutter/2 + 8px + 4;
				}

				&.ev-btn-size-medium {
					padding-right: $gutter/2 + 10px + 4;
				}

				&.ev-btn-size-large {
					padding-right: $gutter/2 + 12px + 4;
				}
			}

			&.ev-btn-success {
				&.ev-btn-size-small {
					padding-right: $gutter/2 + 14px;
				}

				&.ev-btn-size-medium {
					padding-right: $gutter/2 + 16px;
				}

				&.ev-btn-size-large {
					padding-right: $gutter/2 + 18px;
				}
			}
		}
	}

	&.ev-btn-style-round {
		border-radius: 50%;

		i {
			float: left;
			@include opacity( 100 );
			visibility: visible;
			@include transition( visibility $transition_time*1.5, opacity $transition_time*1.5 ease );
		}

		&.ev-btn-type-confirm,
		&.ev-btn-type-save {
			&:after,
			&:before {
				left: 50%;
			}
		}

		&.ev-btn-success,
		&.ev-btn-idle {
			i {
				@include opacity( 0 );
				visibility: hidden;
			}
		}
	}

	&.ev-btn-style-button,
	&.ev-btn-style-round {
		color: $white;
		border: 1px solid;
		font-weight: bold;

		i:before {
			bottom: -1px;
		}

		&:hover {
			@include box-shadow( #{$ui_el_shadow_hover} );
		}

		&:active {
			@include box-shadow( #{$ui_el_shadow} );
			color: rgba( $grey_6, .3 );
		}
	}

	&.ev-btn-style-button {
		padding: 0 $gutter;
		border-radius: $radius;

		// i:before {
		// 	bottom: -1px;
		// }

		&.ev-btn-type-confirm,
		&.ev-btn-type-save {
			&:after,
			&:before {
				right: $gutter;
			}

			&.ev-btn-size-small {
				&:after,
				&:before {
					right: $gutter/2;
				}
			}
		}

		&.ev-btn-size-small {
			padding: 0 $gutter/2;

			&.ev-btn-type-confirm,
			&.ev-btn-type-save {
				&.ev-btn-idle {
					padding-right: $gutter + 8px + 4;
				}

				&.ev-btn-complete {
					padding-right: $gutter + 12px;
				}
			}
		}

		&.ev-btn-size-medium {
			&.ev-btn-type-confirm,
			&.ev-btn-type-save {
				&.ev-btn-idle {
					padding-right: $gutter*2 + 10px + 4;
				}

				&.ev-btn-complete {
					padding-right: $gutter*2 + 14px;
				}
			}
		}

		&.ev-btn-size-large {
			&.ev-btn-type-confirm,
			&.ev-btn-type-save {
				&.ev-btn-idle {
					padding-right: $gutter*2 + 12px + 4;
				}

				&.ev-btn-complete {
					padding-right: $gutter*2 + 16px;
				}
			}
		}
	}

	// Types -------------------------------------------------------------------

	&.ev-btn-type-action {
		&.ev-btn-style-round,
		&.ev-btn-style-button {
			background-color: $blue_0;
			border-color: $blue_0;

			&:hover {
				background-color: $blue;
				border-color: $blue;
			}
		}

		&.ev-btn-style-text {
			color: $blue_0;
		}
	}

	&.ev-btn-type-confirm {
		&.ev-btn-style-round,
		&.ev-btn-style-button {
			background-color: $blue;
			border-color: $blue;
		}

		&.ev-btn-style-text {
			color: $blue;
		}
	}

	&.ev-btn-type-delete {
		&.ev-btn-style-round,
		&.ev-btn-style-button {
			background-color: $red;
			border-color: $red;
		}

		&.ev-btn-style-text {
			color: $red;
		}
	}

	&.ev-btn-type-save {
		&.ev-btn-style-round,
		&.ev-btn-style-button {
			background-color: $green;
			border-color: $green;
			@include transition( padding $transition_time*2 $ease-out-back );
		}

		&.ev-btn-style-text {
			color: $green;
		}
	}

	// TEMP
	i[data-icon='f529']:before {
		font-family: $icons;
		content: "\f132";
	}
}

// -----------------------------------------------------------------------------
// $Spinner animation
// -----------------------------------------------------------------------------

@-webkit-keyframes spinner {
	0%   { -webkit-transform: rotate(0deg); }
	100% { -webkit-transform: rotate(360deg); }
}
@-moz-keyframes spinner {
	0%   { -moz-transform: rotate(0deg); }
	100% { -moz-transform: rotate(360deg); }
}
@-o-keyframes spinner {
	0%   { -o-transform: rotate(0deg); }
	100% { -o-transform: rotate(360deg); }
}
@-ms-keyframes spinner {
	0%   { -ms-transform: rotate(0deg); }
	100% { -ms-transform: rotate(360deg); }
}
@keyframes spinner {
	0%   { transform: rotate(0deg); }
	100% { transform: rotate(360deg); }
}